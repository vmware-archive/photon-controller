apply plugin: 'java'

dependencies {
    compile project(':api-client')
    compile project(':cloud-store')
    compile project(':common')
    compile project(':common-dcp')
    compile project(':common-logging')
    compile project(':nfc-client')
    compile project(':common-auth')
    compile project(':cluster-manager:service-documents')

    compile 'commons-net:commons-net:2.0'
    compile "com.google.guava:guava:${versions.guava}"
    compile 'org.eclipse.jetty:jetty-util:8.1.10.v20130312'

    testCompile("org.apache.curator:curator-test:${versions.curator}") {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'log4j', module: 'log4j'
    }

    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.testng:testng:6.8'
    testCompile "org.powermock:powermock-api-mockito:${versions.powermock}"
    testCompile "org.powermock:powermock-module-testng:${versions.powermock}"
    testCompile(project(path: ':common', configuration: 'tests'))
    testCompile(project(path: ':cloud-store', configuration: 'tests'))
}

jar {
    baseName = 'cm-backend'
    manifest {
        attributes 'Specification-Title': 'Photon Controller Cluster Manager Backend services',
                'Specification-Version': version,
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Built-Gradle': gradle.gradleVersion,
                'Git-Commit': "git rev-parse --short HEAD".execute().text.trim()
  }
}

tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test.class"
    exclude "**/helpers/*.class"
}
