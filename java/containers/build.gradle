import com.bmuschko.gradle.docker.tasks.container.*
import com.bmuschko.gradle.docker.tasks.image.*

task servicebase(type: DockerBuildImage) {
  inputDir = file("servicebase")
  tag = "photon/servicebase"
}

task haproxy(type: DockerBuildImage) {
  dependsOn servicebase
  inputDir = file("haproxy")
  tag = "photon/haproxy"
}

task zookeeper(type: DockerBuildImage) {
  dependsOn servicebase
  inputDir = file("zookeeper")
  tag = "photon/zookeeper"
}

task lightwave(type: DockerBuildImage) {
  dependsOn servicebase
  inputDir = file("lightwave")
  tag = "vmware/lightwave-sts"
}

task removeZookeeper(type: DockerRemoveImage) {
  targetImageId { zookeeper.tag }
}

task removeHaproxy(type: DockerRemoveImage) {
  targetImageId { haproxy.tag }
}

task removeServicebase(type: DockerRemoveImage) {
  targetImageId { servicebase.tag }
}

task photon() {
  dependsOn(
    ":deployer:container",
    ":api-frontend:management:container",
    ":photon-controller-core:container"
  )
}

task photonAndLightwave() {
  dependsOn(
      photon,
      lightwave
  )
}

task all() {
  dependsOn(
    zookeeper,
    haproxy,
    lightwave,
    photon
  )
}

task cleanAll() {
  dependsOn(
    ":api-frontend:management:clean",
    ":cloud-store:clean",
    ":deployer:clean",
    ":housekeeper:clean",
    ":photon-controller-core:clean",
    ":root-scheduler:clean"
  )
}
