apply plugin: 'com.bmuschko.docker-remote-api'

import com.bmuschko.gradle.docker.tasks.container.*
import com.bmuschko.gradle.docker.tasks.image.*

def getDockerUrl() {
  // TODO: docker-machine is Docker Toolbox only, make work on Linux
  def result = "docker-machine url default".execute().text.trim().replaceAll("tcp", "https")
  return result
}

docker {
  // Default for Docker Toolbox
  url = getDockerUrl()
}

task servicebase(type: DockerBuildImage) {
  inputDir = file("servicebase")
  tag = "photon/servicebase"
}

task haproxy(type: DockerBuildImage) {
  dependsOn servicebase
  inputDir = file("haproxy")
  tag = "photon/haproxy"
}

task zookeeper(type: DockerBuildImage) {
  dependsOn servicebase
  inputDir = file("zookeeper")
  tag = "photon/zookeeper"
}

task all() {
  dependsOn zookeeper, haproxy
}

task removeZookeeper(type: DockerRemoveImage) {
  targetImageId { zookeeper.tag }
}

task removeHaproxy(type: DockerRemoveImage) {
  targetImageId { haproxy.tag }
}

task removeServicebase(type: DockerRemoveImage) {
  targetImageId { servicebase.tag }
}

task removeAllContainers(type: Exec) {
  commandLine './docker-rm-all.sh'
  ignoreExitValue = true
}

task removeAllImages(type: Exec) {
  commandLine './docker-rmi-all.sh'
  ignoreExitValue = true
}

task clean() {
  dependsOn removeZookeeper, removeHaproxy, removeServicebase
}

task cleanAll() {
  dependsOn removeAllContainers, removeAllImages
}
