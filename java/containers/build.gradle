import com.bmuschko.gradle.docker.tasks.container.*
import com.bmuschko.gradle.docker.tasks.image.*

task servicebase(type: DockerBuildImage) {
  inputDir = file("servicebase")
  tag = "vmware/servicebase"
}

task tagServiceBase(type: DockerTagImage) {
  dependsOn servicebase
  force = true
  imageId = servicebase.getTag()
  repository = "vmware/photon-controller-service-base"
  tag = "latest"
}

task haproxy(type: DockerBuildImage) {
  dependsOn servicebase
  inputDir = file("haproxy")
  tag = "vmware/haproxy"
}

task zookeeper(type: DockerBuildImage) {
  dependsOn servicebase
  inputDir = file("zookeeper")
  tag = "vmware/zookeeper"
}

task deleteOldRpms(type: Exec) {
  workingDir "../containers/photon-controller-core"
  executable "bash"
  args "-c", "rm -rf *.rpm"
}

task copyRpms(type: Copy) {
  dependsOn ':rpm', deleteOldRpms
  from "../../artifacts/build/RPMS/x86_64/"
  into "../containers/photon-controller-core/"
}

task photoncore(type: DockerBuildImage) {
  dependsOn servicebase, copyRpms
  inputDir = file("photon-controller-core")
  tag = "vmware/photon-controller-core"
}

task photoncore_lightwave_client(type: DockerBuildImage) {
  dependsOn servicebase, copyRpms
  inputDir = file("photon-controller-lightwave-client")
  tag = "vmware/photon-controller-lightwave-client"
}

task photoncore_lightwave_server(type: DockerBuildImage) {
  dependsOn servicebase, copyRpms
  inputDir = file("photon-controller-lightwave-server")
  tag = "vmware/photon-controller-lightwave-server"
}

task removeZookeeper(type: DockerRemoveImage) {
  targetImageId { zookeeper.tag }
}

task removeHaproxy(type: DockerRemoveImage) {
  targetImageId { haproxy.tag }
}

task removeServicebase(type: DockerRemoveImage) {
  targetImageId { servicebase.tag }
}

task photon() {
  dependsOn(
    ":photon-controller-core:container"
  )
}

task all() {
  dependsOn(
    zookeeper,
    haproxy,
    photon
  )
}

task cleanAll() {
  dependsOn(
    ":api-frontend:management:clean",
    ":cloud-store:clean",
    ":deployer:clean",
    ":housekeeper:clean",
    ":photon-controller-core:clean",
    ":root-scheduler:clean"
  )
}
