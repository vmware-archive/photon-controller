dependencies {
  compile project(':common')
  compile project(':common-logging')
  compile project(':nsx-client')

  compile "com.vmware.xenon:xenon-common:${versions.xenon_common}"
  compile "commons-io:commons-io:2.4"
  compile "com.google.guava:guava:${versions.guava}"

  testCompile(project(path: ':common', configuration: 'tests'))
  testCompile 'org.testng:testng:6.8'
  testCompile 'org.hamcrest:hamcrest-all:1.3'
  testCompile "org.mockito:mockito-core:${versions.mockito}"
  testCompile("org.powermock:powermock-api-mockito:${versions.powermock}") {
    exclude group: 'org.mockito', module: 'mockito-all'
  }
  testCompile "org.powermock:powermock-module-testng:${versions.powermock}"
  testCompile "commons-collections:commons-collections:3.2.1"
  testCompile "com.vmware.xenon:xenon-common:${versions.xenon_common}:tests"
}

ext.sharedManifest = manifest {
  attributes 'Specification-Title': 'Photon Controller Management API Frontend',
      'Specification-Version': base_version,
      'Implementation-Version': full_version,
      'Built-By': System.getProperty('user.name'),
      'Built-Date': build_timestamp,
      'Built-JDK': System.getProperty('java.version'),
      'Built-Gradle': gradle.gradleVersion,
      'Git-Commit': git_commit
}

jar {
  manifest = project.manifest {
    from sharedManifest
  }
  into("META-INF/maven/$project.group/$project.name") {
    from "$buildDir/pom.xml"
    rename ".*", "pom.xml"
  }
}

tasks.withType(Test) {
  scanForTestClasses = false
  include "**/*Test.class"
  exclude "**/helpers/*.class"
}

task testJar(type: Jar, dependsOn: testClasses) {
  baseName = "test-${project.archivesBaseName}"
  from sourceSets.test.output
}

configurations {
  tests
}

artifacts {
  tests testJar
}
