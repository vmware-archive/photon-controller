apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

uploadArchives.enabled = true

dependencies {
  compile "commons-io:commons-io:2.4"
  compile "com.vmware.xenon:xenon-common:${versions.xenon_common}"
  compile 'commons-validator:commons-validator:1.4.0'

  testCompile("org.apache.curator:curator-test:${versions.curator}") {
    exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    exclude group: 'log4j', module: 'log4j'
  }

  testCompile 'org.hamcrest:hamcrest-all:1.3'
  testCompile 'org.testng:testng:6.8'
  testCompile "org.powermock:powermock-api-mockito:${versions.powermock}"
  testCompile "org.powermock:powermock-module-testng:${versions.powermock}"
  testCompile "com.vmware.xenon:xenon-common:${versions.xenon_common}:tests"
}

jar {
  baseName = 'photon-model'
  manifest {
    attributes 'Specification-Title': 'Common Model used by Photon Controller',
        'Specification-Version': version,
        'Built-By': System.getProperty('user.name'),
        'Built-Date': new Date(),
        'Built-JDK': System.getProperty('java.version'),
        'Built-Gradle': gradle.gradleVersion,
        'Git-Commit': "git rev-parse --short HEAD".execute().text.trim()
  }
}

tasks.withType(Test) {
  scanForTestClasses = false
  include "**/*Test.class"
  exclude "**/helpers/*.class"
}

task testJar(type: Jar, dependsOn: testClasses) {
  baseName = "test-${project.archivesBaseName}"
  from sourceSets.test.output
}

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

configurations {
  tests
}

artifacts {
  tests testJar
  archives javadocJar, sourcesJar
}

signing {
  required = isReleaseVersion
  sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2') {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots') {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        groupId 'com.vmware.photon.controller'
        packaging 'jar'
        description 'Photon Controller is an open-source system for managing hardware, containers, ' +
            'and clusters at scale'
        url 'https://github.com/vmware/photon-controller'
        scm {
          connection 'scm:git@github.com:vmware/photon-controller.git'
          developerConnection 'git@github.com:vmware/photon-controller.git'
          url 'https://github.com/vmware/photon-controller'
        }
        licenses {
          license {
            name 'License'
            url 'https://github.com/vmware/photon-controller/blob/master/LICENSE.txt'
          }
          license {
            name 'Notice '
            url 'https://github.com/vmware/photon-controller/blob/master/Notice.txt'
          }
        }
        developers {
          developer {
            id 'jaked@vmware.com'
            name 'Jake Dsouza'
            email 'jaked@vmware.com'
          }
        }
      }
    }
  }
}
