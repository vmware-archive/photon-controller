apply plugin: 'application'

mainClassName = 'com.vmware.photon.controller.auth.Main'

task copyJar(type: Copy) {
  from "$buildDir/libs"
  into '../../ruby/cli/assets'
}

assemble.dependsOn copyJar

dependencies {
  compile project(':common-auth')

  // Reference maven repository files.
  compile 'net.sourceforge.argparse4j:argparse4j:0.4.0'
  compile 'ch.qos.logback:logback-classic:1.0.9'
  compile "com.google.guava:guava:${versions.guava}"
  compile "com.google.inject.extensions:guice-assistedinject:${versions.guice}"
  compile "com.google.inject:guice:${versions.guice}"

  testCompile 'org.hamcrest:hamcrest-all:1.3'
  testCompile 'org.testng:testng:6.8'
  testCompile "org.mockito:mockito-core:${versions.mockito}"
  testCompile("org.powermock:powermock-api-mockito:${versions.powermock}") {
    exclude group: 'org.mockito', module: 'mockito-all'
  }
  testCompile "org.powermock:powermock-module-testng:${versions.powermock}"
}

// Build a self contained executable jar.
jar {
  manifest {
    attributes 'Main-Class': 'com.vmware.photon.controller.auth.Main',
        'Specification-Title': 'Photon Controller Authentication Tool',
        'Specification-Version': version,
        'Built-By': System.getProperty('user.name'),
        'Built-Date': new Date(),
        'Built-JDK': System.getProperty('java.version'),
        'Built-Gradle': gradle.gradleVersion
  }
  exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
  from configurations.compile.collect {it.directory ? it : zipTree(it)}
  from files(compileJava)
  baseName = "${project.archivesBaseName}-runnable-full"
}

tasks.withType(Test) {
  scanForTestClasses = false
  include "**/*Test.class"
  exclude "**/helpers/*.class"
}

test {
  useTestNG() {
    excludeGroups 'flaky'
  }
}
