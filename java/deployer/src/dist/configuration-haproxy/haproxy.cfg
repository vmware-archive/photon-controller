global
  ca-base  /etc/ssl/certs
  chroot  /var/lib/haproxy
  crt-base  /etc/ssl/private
  daemon
  group  haproxy
  log 127.0.0.1 local0
  maxconn  4000
  pidfile  /var/run/haproxy.pid
  ssl-default-bind-ciphers  ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
  stats  socket /var/lib/haproxy/stats
  tune.ssl.default-dh-param  2048
  user  haproxy

defaults
  log  global
  maxconn  8000
  mode  http
  option  redispatch
  option  forwardfor
  option  http-server-close
  retries  3
  timeout  http-request 10s
  timeout  queue 1m
  timeout  connect 10s
  timeout  client 1m
  timeout  server 1m
  timeout  check 10s

frontend www-https
  bind 0.0.0.0:{{{LOAD_BALANCER_HTTPS_PORT}}} ssl crt /etc/ssl/private/photon_haproxy.pem
  default_backend www-backend
  reqadd X-Forwarded-Proto:\ https
  capture request header origin len 128
  http-response add-header Access-Control-Allow-Origin %[capture.req.hdr(0)] if { capture.req.hdr(0) -m found }
  rspadd Access-Control-Allow-Headers:\ Origin,\ X-Requested-With,\ Content-Type,\ Accept  if { capture.req.hdr(0) -m found }

frontend mgmt-ui-http
  bind 0.0.0.0:{{{MANAGEMENT_UI_HTTP_PORT}}} ssl crt /etc/ssl/private/photon_haproxy.pem
  default_backend mgmt-ui-http-backend
  capture request header origin len 128
  http-response add-header Access-Control-Allow-Origin %[capture.req.hdr(0)] if { capture.req.hdr(0) -m found }
  rspadd Access-Control-Allow-Headers:\ Origin,\ X-Requested-With,\ Content-Type,\ Accept  if { capture.req.hdr(0) -m found }

frontend mgmt-ui-https
  bind 0.0.0.0:{{{MANAGEMENT_UI_HTTPS_PORT}}} ssl crt /etc/ssl/private/photon_haproxy.pem
  default_backend mgmt-ui-https-backend
  capture request header origin len 128
  http-response add-header Access-Control-Allow-Origin %[capture.req.hdr(0)] if { capture.req.hdr(0) -m found }
  rspadd Access-Control-Allow-Headers:\ Origin,\ X-Requested-With,\ Content-Type,\ Accept  if { capture.req.hdr(0) -m found }

backend www-backend
  balance  roundrobin
  mode  http
{{#LOAD_BALANCER_SERVERS}}
  server {{{serverName}}} {{{serverAddress}}} check
{{/LOAD_BALANCER_SERVERS}}

backend mgmt-ui-http-backend
  balance  roundrobin
  mode http
{{#MGMT_UI_HTTP_SERVERS}}
  server {{{serverName}}} {{{serverAddress}}} check
{{/MGMT_UI_HTTP_SERVERS}}

backend mgmt-ui-https-backend
  balance  roundrobin
  mode http
{{#MGMT_UI_HTTPS_SERVERS}}
  server {{{serverName}}} {{{serverAddress}}} check
{{/MGMT_UI_HTTPS_SERVERS}}
