# Copyright 2015 VMware, Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed
# under the License is distributed on an "AS IS" BASIS, without warranties or
# conditions of any kind, EITHER EXPRESS OR IMPLIED. See the License for the
# specific language governing permissions and limitations under the License.

namespace :ci do
  desc "Export url for the last successful build on a branch"
  task :export_job_url, [:file] do |_,args|
    begin
      build_url = get_build_url branch
    rescue
      build_url = get_build_url "develop"
    end

    File.open(args.file, "w+") do |f|
      f.write("export ARTIFACT_BUILD=\"#{build_url}\"\n")
    end
  end

  def get_build_url(branch)
    release_build = ENV["ARTIFACT_BUILD"]
    return release_build unless release_build.nil?

    jenkins_client.job.get_builds(job_name).each do |build|
      details = @client.job.get_build_details(job_name, build["number"])
      return build["url"] if build_successfull?(details) && get_build_param(details, "GERRIT_BRANCH") == branch
    end

    fail "Could not find a successful '#{job_name}' job for branch: #{branch}"
  end

  def jenkins_client
    require "jenkins_api_client"

    @client ||= JenkinsApi::Client.new(:server_url => jenkins_url)
  end

  def jenkins_url
    ENV["JENKINS_URL"] or fail "JENKINS_URL env is not defined"
  end

  def branch
    ENV["GERRIT_BRANCH"] || "develop"
  end

  def job_name
    ENV["ARTIFACT_JOB_NAME"] || "release"
  end

  def get_build_param(details, name)
    params = details["actions"].select { |h| h.has_key?("parameters") }
    param = params.first["parameters"].select { |h| h["name"] == name }
    param.first["value"] unless param.nil?
  end

  def  build_successfull?(details)
    return (not details["building"]) && details["result"] == "SUCCESS"
  end
end
