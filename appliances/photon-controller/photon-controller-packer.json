{
  "variables": {
    "source_ova": "{{env `SOURCE_OVA`}}"
  },
  "builders": [
    {
      "type": "virtualbox-ovf",
      "format": "ova",
      "source_path": "{{ user `source_ova` }}",
      "ssh_username": "root",
      "ssh_password": "changeme",
      "shutdown_command": "echo 'packer' | shutdown -P now",
      "headless": true,
      "guest_additions_mode": "disable",
      "output_directory": "build/",
      "vm_name": "photon-controller-vb",
      "vboxmanage": [
        [ "modifyvm", "{{.Name}}", "--memory", "2048" ],
        [ "modifyvm", "{{.Name}}", "--cpus", "2" ]
      ]
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "inline": "tdnf install -y tar && tdnf install -y wget"
    },
    {
      "type": "shell",
      "inline": "echo Installing libxml2 for xmlint && tdnf install -y libxml2"
    },
    {
      "type": "shell",
      "inline": "wget -nv {{ user `jq_url` }} -O /usr/local/bin/jq && chmod +x /usr/local/bin/jq"
    },
    {
      "type": "file",
      "source": "{{ user `photon_rpm` }}",
      "destination": "/tmp/{{ user `photon_rpm` }}"
    },
    {
      "type": "file",
      "source": "scripts",
      "destination": "/tmp"
    },
    {
      "type": "shell",
      "inline": "/tmp/scripts/install-photon-controller.sh"
    },
    {
      "type": "shell",
      "inline": "/tmp/scripts/configure-users.sh"
    },
    {
      "type": "file",
      "source": "photon",
      "destination": "/etc"
    },
    {
      "type": "shell",
      "inline": "wget https://bootstrap.pypa.io/get-pip.py && python get-pip.py && rm -rf get-pip.py && pip install pystache"
    },
    {
      "type": "file",
      "source": "service/configure-guest.service",
      "destination": "/lib/systemd/system/configure-guest.service"
    },
    {
      "type": "file",
      "source": "service/photon-controller.service",
      "destination": "/lib/systemd/system/photon-controller.service"
    },
    {
      "type": "shell",
      "inline": "systemctl enable configure-guest"
    },
    {
      "type": "shell",
      "inline": "rm -rf /tmp/*"
    },
    {
      "type": "shell",
      "inline": "chage -d 0 root"
    }
  ]
}
