#!/usr/bin/env python
# Copyright (c) 2015 VMware, Inc. All Rights Reserved.
import sys

from eccli.concurrency import run_concurrency
from eccli.format import print_request
from eccli.format import print_response
from eccli.optparser import default_parser
from eccli.thrift import get_client
from gen.host.ttypes import DeleteImageRequest
from gen.resource.ttypes import Image, Datastore

parser = default_parser(usage="eccli-image-delete [options]",
                        add_help=True)
parser.add_option("-i", "--image",
                  action="store", type="string", dest="image",
                  help="deleted image, datastore:image (e.g. ds1:image1)")
parser.add_option("-f", "--force",
                  action="store_true", dest="force",
                  help="force delete")
parser.add_option("-t", "--tombstone",
                  action="store_true", dest="tombstone",
                  help="Mark image as tombstone")
(options, args) = parser.parse_args()

if not options.image:
    print >> sys.stderr, "Error: image is required\n"
    parser.print_help()
    exit(1)

request = DeleteImageRequest()
ds, image = options.image.split(':')
request.image = Image(image, Datastore(ds))
request.force = options.force
request.tombstone = options.tombstone

print_request(request)
client = get_client(options.host)
response = client.delete_image(request)
print_response(response)

report = run_concurrency("delete_image", request, options)
